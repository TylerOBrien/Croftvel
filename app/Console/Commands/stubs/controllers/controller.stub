<?php

namespace App\Http\Controllers\Api\v1;

use App\Http\Controllers\Controller;
use App\Http\Requests\Api\v1\DummyModel\{ IndexDummyModel, ShowDummyModel, StoreDummyModel, UpdateDummyModel, DestroyDummyModel };
use App\Models\DummyModel;

class DummyController extends Controller
{
    /**
     * Display a listing of the DummyBinding.
     * 
     * @param IndexDummyModel $request
     *
     * @return Response
     */
    public function index(IndexDummyModel $request)
    {
        return DummyModel::all();
    }

    /**
     * Display the specified DummyBinding.
     * 
     * @param DummyModel $DummyBinding
     * @param ShowDummyModel $request
     *
     * @return Response
     */
    public function show(DummyModel $DummyBinding, ShowDummyModel $request)
    {
        return $DummyBinding;
    }

    /**
     * Store a newly created DummyBinding in storage.
     * 
     * @param StoreDummyModel $request
     *
     * @return Response
     */
    public function store(StoreDummyModel $request)
    {
        $fields = $request->validated();
        $DummyBindingId = DummyModel::create($fields)->id;

        return DummyModel::find($DummyBindingId);
    }

    /**
     * Update the specified DummyBinding in storage.
     * 
     * @param DummyModel $DummyBinding
     * @param UpdateDummyModel $request
     * 
     * @return Response
     */
    public function update(DummyModel $DummyBinding, UpdateDummyModel $request)
    {
        $fields = $request->validated();

        $DummyBinding->fill($fields);
        $DummyBinding->save();

        return $DummyBinding->only(array_keys($fields));
    }

    /**
     * Remove the specified DummyBinding from storage.
     * 
     * @param DummyModel $DummyBinding
     * @param DestroyDummyModel $request
     *
     * @return Response
     */
    public function destroy(DummyModel $DummyBinding, DestroyDummyModel $request)
    {
        $DummyBinding->delete();
        return response()->json(null, 204);
    }
}
